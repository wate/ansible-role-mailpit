# code: language=ansible
---
- name: Verify
  hosts: all
  gather_facts: false
  become: true
  tasks:
    ## テストの前処理
    - name: Gather package facts
      ansible.builtin.package_facts:
        manager: auto
    - name: Gather service facts
      ansible.builtin.service_facts:
    - name: Gather facts on listening ports
      community.general.listen_ports_facts:
        command: ss
      become: true
    - name: Set assert variables
      ansible.builtin.set_fact:
        listen_tcp_posts: "{{ ansible_facts.tcp_listen | map(attribute='port') | unique | sort | list }}"
        listen_udp_posts: "{{ ansible_facts.udp_listen | map(attribute='port') | unique | sort | list }}"
    ## ユーザーのテスト
    - name: Check user
      ansible.builtin.user:
        name: mailpit
        system: true
      check_mode: true
      register: user_result
    - name: Assert user
      ansible.builtin.assert:
        that:
          - user_result is not changed
    ## グループのテスト
    - name: Check group
      ansible.builtin.group:
        name: mailpit
        system: true
      check_mode: true
      register: group_result
    - name: Assert group
      ansible.builtin.assert:
        that:
          - group_result is not changed
    ## ファイルのテスト
    - name: Test files
      block:
        - name: Check installd mailpit
          ansible.builtin.stat:
            path: /usr/local/sbin/mailpit
          register: mailpit_bin_result
        - name: Assert mailpit binary
          ansible.builtin.assert:
            that:
              - mailpit_bin_result.stat.exists
              - mailpit_bin_result.stat.executable
        - name: Check mailpit config directory
          ansible.builtin.stat:
            path: /etc/mailpit
          register: mailpit_config_dir_result
        - name: Assert mailpit binary
          ansible.builtin.assert:
            that:
              - mailpit_config_dir_result.stat.exists
              - mailpit_config_dir_result.stat.pw_name == 'mailpit'
              - mailpit_config_dir_result.stat.gr_name == 'mailpit'
              - mailpit_config_dir_result.stat.mode == '0755'
        - name: Check mailpit environment file
          ansible.builtin.stat:
            path: /etc/default/mailpit
          register: mailpit_env_file_result
        - name: Assert mailpit env file
          ansible.builtin.assert:
            that:
              - mailpit_env_file_result.stat.exists
        - name: Check mailpit systemd unit file
          ansible.builtin.stat:
            path: /usr/lib/systemd/system/mailpit.service
          register: mailpit_systemd_unit_file_result
        - name: Assert mailpit systemd unit file
          ansible.builtin.assert:
            that:
              - mailpit_systemd_unit_file_result.stat.exists
    ## サービスのテスト
    - name: Assert service binary
      ansible.builtin.assert:
        that:
          - ansible_facts.services['mailpit.service'] is defined
          - ansible_facts.services['mailpit.service']['state'] == 'running'
          - ansible_facts.services['mailpit.service']['status'] == 'enabled'
    ## 待受ポートのテスト
    - name: Assert service binary
      ansible.builtin.assert:
        that:
          - 1025 in listen_tcp_posts
          - 8025 in listen_tcp_posts
    ## APIのテスト
    - name: Send test mail
      community.general.mail:
        subject: test mail subject
        to: test to <to@example.com>
        from: test from <from@example.com>
        body: test mail body
        port: 1025
    - name: Test API mailpit infomation request
      ansible.builtin.uri:
        url: http://localhost:8025/api/v1/info
      register: mailpit_api_result
    - name: Assert API
      ansible.builtin.assert:
        that: mailpit_api_result.status == 200
    - name: Test API List message request
      ansible.builtin.uri:
        url: http://localhost:8025/api/v1/messages
      register: mailpit_list_message_api_result
    - name: Assert API
      ansible.builtin.assert:
        that:
          - mailpit_list_message_api_result.status == 200
          - mailpit_list_message_api_result.json.messages[0].Subject == "test mail subject"
          - mailpit_list_message_api_result.json.messages[0].From.Address == "from@example.com"
          - mailpit_list_message_api_result.json.messages[0].From.Name == "test from"
          - mailpit_list_message_api_result.json.messages[0].To[0].Address == "to@example.com"
          - mailpit_list_message_api_result.json.messages[0].To[0].Name == "test to"
